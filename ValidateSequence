Input: pushed = [1,2,3,4,5], popped = [4,5,3,2,1]
Output: true
Explanation: We might do the following sequence:
push(1), push(2), push(3), push(4),
pop() -> 4,
push(5),
pop() -> 5, pop() -> 3, pop() -> 2, pop() -> 1




class Solution {
public:
    bool validateStackSequences(vector<int>& pushed, vector<int>& popped) {
        int n = pushed.size();
        int m = popped.size();
        stack<int> st;
        int i = 0;
        int j = 0;
        while (i < n && j < m) {
            st.push(pushed[i]);
            // Checking if the popped array element is same as stack top then
            // pop it out
            while (!st.empty() && j < m && st.top() == popped[j]) {
                st.pop();
                j++;
            }
            i++;
        }
        return st.empty();
    }
};
